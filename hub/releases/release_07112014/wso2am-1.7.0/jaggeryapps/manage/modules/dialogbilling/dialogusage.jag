<%
function getProviderAPIUsage(subscriberName,period) {
        var usage = [];
        var log = new Log();
        log.info("Starting getProviderAPIUsage for : " + subscriberName + " - " + period);
        var store = jagg.module("manager").getCustomBilling();
        try {
	        usage = store.getAPIUsageforSubscriber(subscriberName,period);
	        if (log.isDebugEnabled()) {
	        	log.debug("getProviderAPIUsage for : " + server);
       		}
			
			if (usage == null) {
	        	return {error:true};
			} else {
				return {error:false,usage:usage};
			}
		} catch (e) {
		        log.error(e.message);
		        return { error:e,usage:null};
		}
}
function getReportFileContent(subscriberName,period) {
        var usage = [];
        var log = new Log();
        var store = jagg.module("manager").getCustomBilling();
        try {
	        usage = store.getReportFileContent(subscriberName,period);
	        if (log.isDebugEnabled()) {
	        	log.debug("getReportFileContent for : " + server);
       		}
			
			if (usage == null) {
	        	return {error:true};
			} else {
				log.error(usage);
				print(usage);
			}
		} catch (e) {
		        log.error(e.message);
		        return { error:e,usage:null};
		}
}

function getResponseTimes(subscriberName){
	var log = new Log();
        var store = jagg.module("manager").getCustomBilling();
	var responseTimes = [];
	try {
		log.info("****Before finding ResponseTimes***");
	        responseTimes = store.getResponseTimeData(subscriberName);
		log.info("****After finding ResponseTimes*** "+stringify(responseTimes));
		return {error:false,data : responseTimes};
			
		} catch (e) {
		        log.error(e.message);
		        return { error:true,message:e.message};
		}
}

function getAllSubscribers(){
	var log = new Log();
	var billing = jagg.module("manager").getCustomBilling();
	var subscribers = [];
	try {
		subscribers = billing.getAllSubscribers();
		return {error:false, data : subscribers};
		
		} catch (e) {
			log.error(e.message);
			return { error:true,message:e.message};
		}
	}

function getAllResponseTimes(subscriberName,appName,fromDate,toDate){
	var log = new Log();
    var store = jagg.module("manager").getCustomBilling();
	var responseTimes = [];
	try {
	    	responseTimes = store.getAllResponseTimes(subscriberName,appName,fromDate,toDate);
			return {error:false,data : responseTimes};
			
		} catch (e) {
		    log.error(e.message);
		    return { error:true,message:e.message};
		}
}

function executeDummyQuery(subscriberName,period){

	var billing = jagg.module("manager").getCustomBilling();
	var ret = billing.executeDummyQuery(subscriberName,period);
	return { error:false,usage:ret};

}

function testDialogBilling(){
var billing = jagg.module("manager").getCustomBilling();
  return {
  error:false
  }

}

function isBillingEnabled() {
  var store = jagg.module("manager").getAPIStoreObj();
  var config = store.isBillingEnabled();
  return {
  error:false,
  isBillingEnabled:config
  }
}
%>
