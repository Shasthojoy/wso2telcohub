<%
include("/jagg/jagg.jag");

(function () {
    var mod, obj, application, result, username,responseTimes;
    
    var msg = require("/site/conf/ui-messages.jag");
    var action = request.getParameter("action");
    var user = jagg.getUser();
    
    var log = new Log();
   
    
    if (action == "getProviderAPIUsage") {
        if (!user) {
            print({
                error:true,
                message:msg.error.loginRequired(action)
            });
            return;
        }

        var period = request.getParameter("period");
        username = user.username;
        var selectedSubscriber = request.getParameter("subscriber");
        if (user.isAdmin) {
            username = selectedSubscriber;
        }
		var dialogbillingModule = jagg.module("dialogbilling");
        result = dialogbillingModule.getProviderAPIUsage(username,period);
        
		log.debug("::: Period result: >> "+ stringify(result));
		
        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                usage:result.usage
            }
        }
        print(obj);
        
    } else if (action == "getReportFileContent"){ 
    	if (!user) {
            print({
                error:true,
                message:msg.error.loginRequired(action)
            });
            return;
        }
        
        var period = request.getParameter("period");
        
        username = user.username;
        var selectedSubscriber = request.getParameter("subscriber");
        if (user.isAdmin) {
            username = selectedSubscriber;
        }
        var dialogbillingModule = jagg.module("dialogbilling");
        result = dialogbillingModule.getReportFileContent(username,period);
        
        
        response.contentType = 'application/csv';
        response.addHeader('Content-Disposition', 'attachment;filename='+username+'-'+period+'.csv');

        print(result);
        
        
    } else if (action == "getProviderResponseTimes"){
		var respnseTimes;
		var dialogbillingModule = jagg.module("dialogbilling");
		
		username = user.username;
		respnseTimes = dialogbillingModule.getResponseTimes(username);
		log.debug("::: ResponseTimes: >> "+ stringify(respnseTimes));
		
		if (respnseTimes.error) {
            obj = {
                error:respnseTimes.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                data:respnseTimes.data
            }
        }
        print(obj);
		

		
	} else if (action == "getAllSubscribers"){ 
        if (!user) {
            print({
                error:true,
                message:msg.error.loginRequired(action)
            });
            return;
        }
        
        username = user.username;
        var dialogbillingModule = jagg.module("dialogbilling");
        result = dialogbillingModule.getAllSubscribers();
        
        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                data:result.data
            }
        }
        print(obj);      
        
    } else if (action == "getAllResponseTimes"){
        var responseTimes;
        var subscriberName = user.username;
        var selectedSubscriber = request.getParameter("subscriber");
        if (user.isAdmin) {
            subscriberName = selectedSubscriber;
        }
        var appName = request.getParameter("application");
        var fromDate = request.getParameter("fromDate");
        var toDate = request.getParameter("toDate");

        var dialogbillingModule = jagg.module("dialogbilling");     
        responseTimes = dialogbillingModule.getAllResponseTimes(subscriberName,appName,fromDate,toDate);
        log.debug("::: ResponseTimes: >> "+ stringify(responseTimes));
        
        if (responseTimes.error) {
            obj = {
                error:responseTimes.error,
                message:msg.error.authError(action, subscriberName)
            };
        } else {
            obj = {
                error:false,
                data:responseTimes.data
            }
        }
        print(obj);
                
    }
	else{
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>