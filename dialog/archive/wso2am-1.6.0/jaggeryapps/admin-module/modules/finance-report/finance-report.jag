<%
function getAllSubscribers(){
	var log = new Log();
	var billing = jagg.module("manager").getCustomBilling();
	var subscribers = [];
	try {
		subscribers = billing.getAllSubscribers();
		return {error:false, data : subscribers};

	} catch (e) {
		log.error(e.message);
		return { error:true,message:e.message};
	}
}

function getAllOperators(){
	var log = new Log();
	//log.info("*************************Get All Operators from Host Object***************************");

	var billing = jagg.module("manager").getCustomBilling();
	var operators = [];
	try {
		operators = billing.getAllOperators();
		log.info("Operator List: " + stringify(operators));
		return {error:false, data : operators};

	} catch (e) {
		log.error(e.message);
		return { error:true,message:e.message};
	}
}

function getAllAPIs(){
	var log = new Log();
	//log.info("*************************Get All APIs from Host Object***************************");

	var store = jagg.module("manager").getAPIStoreObj();
	var apis = [];
	try {
		apis = store.getAllPublishedAPIs("carbon.super");
		log.info("API List: " + stringify(apis));
		return {error:false, data : apis};

	} catch (e) {
		log.error(e.message);
		return { error:true,message:e.message};
	}
}

function getAppsBySubscriber(selectedSubscriber){
	var log = new Log();
	log.info("Selected Subscriber: " + stringify(selectedSubscriber));
	//log.info("*************************Get All Apps from Host Object***************************");

	var store = jagg.module("manager").getAPIStoreObj();
	var apps = [];
	try {
		apps = store.getApplications(selectedSubscriber);
		log.info("Application List: " + stringify(apps));
		return {error:false, data : apps};

	} catch (e) {
		log.error(e.message);
		return { error:true,message:e.message};
	}
}

function getBillingData(subscriber, period){
	var log = new Log();
	log.info("Period : " + stringify(period));
	log.info("Subscriber : " + stringify(subscriber));

	var usage = [];

	var store = jagg.module("manager").getCustomBilling();
	try {
		usage = store.getAPIUsageforSubscriber(subscriber, period);

		if (usage == null) {
			return {error:true};
		} else {
			return {error:false,usage:usage};
		}
	} catch (e) {
		log.error(e.message);
		return { error:e,usage:null};
	}
}
%>
